import streamlit as st
import pandas as pd
import plotly.express as px

# Fonction principale pour g√©rer et afficher les variables environnementales
def variables():
    # Charger la base de donn√©es
    df_synthese = pd.read_csv("agribalyse-31-synthese.csv", delimiter=',', dtype=str)

    # V√©rifier si le panier existe dans le session_state
    if "panier" not in st.session_state:
        st.session_state.panier = []

    # V√©rifier si le panier est vide
    if not st.session_state.panier:
        st.warning("Votre panier est vide. Ajoutez des produits pour voir les indicateurs environnementaux.")
        return

    # Afficher le titre
    st.title("üìä Suivi des Indicateurs Environnementaux du Panier")

    # S√©lectionner une variable environnementale √† afficher
    selected_variable = st.selectbox(
        "üîç Choisissez une variable environnementale √† afficher",
        ['Changement climatique', 'Appauvrissement de la couche d\'ozone', 'Rayonnements ionisants', 
         'Formation photochimique d\'ozone', 'Particules fines', 
         'Effets toxicologiques sur la sant√© humaine : substances non-canc√©rog√®nes',
         'Effets toxicologiques sur la sant√© humaine : substances canc√©rog√®nes', 
         'Acidification terrestre et eaux douces', 'Eutrophisation eaux douces', 
         'Eutrophisation marine', 'Eutrophisation terrestre', 
         '√âcotoxicit√© pour √©cosyst√®mes aquatiques d\'eau douce', 'Utilisation du sol', 
         '√âpuisement des ressources eau', '√âpuisement des ressources √©nerg√©tiques', 
         '√âpuisement des ressources min√©raux', 'Changement climatique - √©missions biog√©niques',
         'Changement climatique - √©missions fossiles', 
         'Changement climatique - √©missions li√©es au changement d\'affectation des sols']
    )

    # Extraire les codes CIQUAL des produits dans le panier
    codes_ciqual = [item["code_ciqual"] for item in st.session_state.panier]
    
    # Filtrer les produits dans la BDD par les codes CIQUAL du panier
    produits_synthese = df_synthese[df_synthese["Code CIQUAL"].astype(str).isin(map(str, codes_ciqual))]

    # V√©rifier si des produits ont √©t√© trouv√©s
    if produits_synthese.empty:
        st.warning("Aucun produit correspondant aux codes CIQUAL dans le panier.")
        return

    # Convertir les valeurs de la colonne s√©lectionn√©e en float pour √©viter des erreurs de type
    produits_synthese[selected_variable] = produits_synthese[selected_variable].astype(float)

    # Calculer la somme des valeurs pour la variable s√©lectionn√©e dans le panier
    somme_variable = produits_synthese[selected_variable].sum()

    # Afficher la somme des valeurs pour la variable environnementale s√©lectionn√©e
    st.metric(label=f"Somme des {selected_variable}", value=f"{somme_variable:.2f}")
